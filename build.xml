<project name="my-prod-playground"
         default="syncRepository"
         basedir="."
         xmlns:sf="antlib:com.salesforce"
         xmlns:if="ant:if"
         xmlns:unless="ant:unless">

  <tstamp>
    <format property="TODAY_CT" pattern="yyyyMMdd_HHmm" />
  </tstamp>

  <property file="build.properties"/>
  <property environment="env"/>
  <property name="production_instance" value="production" />
  <property name="test_NoTestRun" value="NoTestRun" />
  <property name="test_RunLocalTests" value="RunLocalTests" />

  <property name="story" value="ant/all" />
  <property name="sourceInstance" value="${production_instance}" />
  <property name="targetInstance" value="${production_instance}" />
  <property name="sf.testLevel" value="${test_NoTestRun}" />
  <property name="sf.checkOnly" value="false" />
  <property name="sf.recentValidationId" value="" />

  <!--Set dynamic variables-->

  <property name="repositorySource" value="src" />
  <property name="sourceFolderTmp" value="${story}/src" />
  <property name="sourceFolder" value="${story}/src_${TODAY_CT}" />
  <property name="targetFolder" value="${story}/src_${targetInstance}_${TODAY_CT}" />
  <property name="destructiveFolder" value="${story}/destructive_${targetInstance}" />
  <property name="destructiveBackupFolder" value="${destructiveFolder}/backup_${TODAY_CT}" />
  <property name="destructiveSrcFolder" value="${destructiveFolder}/src_${TODAY_CT}" />

  <!--
      Setting default value for username, password and session id properties to empty string
      so unset values are treated as empty. Without this, ant expressions such as ${sf.username}
      will be treated literally.
  -->

  <!--Server data-->
  <condition property="sf.serverURLSource" value="${sf.serverURL}">
    <and>
      <equals arg1="${sourceInstance}" arg2="${production_instance}" />
    </and>
  </condition>

  <condition property="sf.serverURLSource" value="${sf.serverURL}">
    <not> <isset property="sf.serverurlSource"/> </not>
  </condition>

  <condition property="sf.serverURLTarget" value="${sf.serverURL}">
    <and>
      <equals arg1="${targetInstance}" arg2="${production_instance}" />
    </and>
  </condition>

  <condition property="sf.serverURLTarget" value="${sf.serverURL}">
    <not> <isset property="sf.serverURLTarget"/> </not>
  </condition>

  <!--Source login data-->
  <condition property="sf.usernameSource" value="${sf.usernameProduction}">
    <and>
      <equals arg1="${sourceInstance}" arg2="${production_instance}" />
    </and>
  </condition>

  <condition property="sf.passwordSource" value="${sf.passwordProduction}">
    <and>
      <equals arg1="${sourceInstance}" arg2="${production_instance}" />
    </and>
  </condition>

  <!--Target login data-->
  <condition property="sf.usernameTarget" value="${sf.usernameProduction}">
    <and>
      <equals arg1="${targetInstance}" arg2="${production_instance}" />
    </and>
  </condition>

  <condition property="sf.passwordTarget" value="${sf.passwordProduction}">
    <and>
      <equals arg1="${targetInstance}" arg2="${production_instance}" />
    </and>
  </condition>

  <condition property="sf.sessionId" value="">
    <not> <isset property="sf.sessionId"/> </not>
  </condition>

  <!--Ant jar-->
  <taskdef resource="com/salesforce/antlib.xml" uri="antlib:com.salesforce">
    <classpath>
      <pathelement location="../Ant_Migration_Tool/salesforce_ant_48.0/ant-salesforce.jar" />
    </classpath>
  </taskdef>

  <!--Targets-->
  <target name="copyToRepository">
    <echo message="Copying folder: ${folder} into ${repositorySource}" level="info" />

    <copy todir="${repositorySource}" overwrite="true">
      <fileset dir="${folder}">
        <exclude name="package.xml"/>
        <exclude name="destructiveChangesPre.xml"/>
        <exclude name="destructiveChangesPost.xml"/>
        <exclude name="profiles/*"/>
      </fileset>
    </copy>
  </target>

  <target name="retrieveInstanceSources">
    <delete dir="${folder}"/>
    <mkdir dir="${folder}"/>

    <echo message="Retrieving target: ${instanceUsername} into ${folder}" level="info" />

    <sf:retrieve username="${instanceUsername}"
                 password="${instancePassword}"
                 serverurl="${instanceServerUrl}"
                 retrieveTarget="${folder}"
                 unpackaged="${story}/package.xml"
                 maxPoll="${sf.maxPoll}" />
  </target>

  <target name="retrieveSource">
    <antcall target="retrieveInstanceSources">
      <param name="folder" value="${sourceFolder}" />
      <param name="instanceUsername" value="${sf.usernameSource}" />
      <param name="instancePassword" value="${sf.passwordSource}" />
      <param name="instanceServerUrl" value="${sf.serverURLSource}" />
    </antcall>
  </target>

  <target name="retrieveTarget">
    <antcall target="retrieveInstanceSources">
      <param name="folder" value="${targetFolder}" />
      <param name="instanceUsername" value="${sf.usernameTarget}" />
      <param name="instancePassword" value="${sf.passwordTarget}" />
      <param name="instanceServerUrl" value="${sf.serverURLTarget}" />
    </antcall>
  </target>

  <target name="deploy">
    <antcall target="retrieveSource" />

    <copy todir="${sourceFolder}">
      <fileset dir="${story}" includes="package.xml" />
      <fileset dir="${story}" includes="destructiveChangesPre.xml" />
      <fileset dir="${story}" includes="destructiveChangesPost.xml" />
    </copy>

    <antcall target="copyToRepository">
      <param name="folder" value="${sourceFolder}" />
    </antcall>

    <antcall target="retrieveTarget" />

    <sf:deploy username="${sf.usernameTarget}"
               password="${sf.passwordTarget}"
               serverurl="${sf.serverURLTarget}"
               maxPoll="${sf.maxPoll}"
               deployRoot="${sourceFolder}"
               checkonly="${sf.checkOnly}"
               rollbackOnError="true"
               testlevel="${sf.testLevel}"
               ignorewarnings="true" />
  </target>

  <target name="justDeploy">
    <!--<antcall unless:true="${sf.checkOnly}" target="retrieveTarget" />-->
    <antcall target="retrieveSource" />

    <copy todir="${sourceFolderTmp}">
      <fileset dir="${story}" includes="package.xml" />
      <fileset dir="${story}" includes="destructiveChangesPre.xml" />
      <fileset dir="${story}" includes="destructiveChangesPost.xml" />
    </copy>

    <echo message="sourceFolderTmp: ${sourceFolderTmp}" level="info" />
    <echo message="usernameTarget: ${sf.usernameTarget}" level="info" />
    <echo message="serverurlTarget: ${sf.serverURLTarget}" level="info" />
    <echo message="checkOnly: ${sf.checkOnly}" level="info" />
    <echo message="testLevel: ${sf.testLevel}" level="info" />

    <sf:deploy username="${sf.usernameTarget}"
               password="${sf.passwordTarget}"
               serverurl="${sf.serverURLTarget}"
               maxPoll="${sf.maxPoll}"
               deployRoot="${sourceFolderTmp}"
               checkonly="${sf.checkOnly}"
               rollbackOnError="true"
               testlevel="${sf.testLevel}"
               ignorewarnings="true" />
  </target>

  <target name="justDeployRunningTests">
    <antcall unless:true="${sf.checkOnly}" target="retrieveTarget" />

    <copy todir="${sourceFolderTmp}">
      <fileset dir="${story}" includes="package.xml" />
    </copy>

    <echo message="sourceFolderTmp: ${sourceFolderTmp}" level="info" />
    <echo message="usernameTarget: ${sf.usernameTarget}" level="info" />
    <echo message="serverurlTarget: ${sf.serverURLTarget}" level="info" />
    <echo message="checkOnly: ${sf.checkOnly}" level="info" />
    <echo message="testLevel: ${sf.testLevel}" level="info" />

    <sf:deploy username="${sf.usernameTarget}"
               password="${sf.passwordTarget}"
               serverurl="${sf.serverURLTarget}"
               maxPoll="${sf.maxPoll}"
               deployRoot="${sourceFolderTmp}"
               checkonly="${sf.checkOnly}"
               rollbackOnError="true"
               testlevel="RunSpecifiedTests">
      <runTest>CleanAVRRecordsBatchableTests</runTest>
    </sf:deploy>
  </target>

  <target name="deployRunningTests">
    <antcall target="retrieveSource" />

    <copy todir="${sourceFolder}">
      <fileset dir="${story}" includes="package.xml" />
      <fileset dir="${story}" includes="destructiveChangesPre.xml" />
      <fileset dir="${story}" includes="destructiveChangesPost.xml" />
    </copy>

    <antcall target="copyToRepository">
      <param name="folder" value="${sourceFolder}" />
    </antcall>

    <antcall target="retrieveTarget" />

    <sf:deploy username="${sf.usernameTarget}"
               password="${sf.passwordTarget}"
               serverurl="${sf.serverURLTarget}"
               maxPoll="${sf.maxPoll}"
               deployRoot="${sourceFolder}"
               checkonly="${sf.checkOnly}"
               rollbackOnError="true"
               testlevel="RunSpecifiedTests">
      <runTest>DataFactoryTests</runTest>
    </sf:deploy>
  </target>

  <target name="quickDeploy">
    <sf:deployRecentValidation username="${sf.usernameTarget}"
                               password="${sf.passwordTarget}"
                               serverurl="${sf.serverURLTarget}"
                               maxPoll="${sf.maxPoll}"
                               recentValidationId="$(sf.recentValidationId}"/>
  </target>

  <target name="retrieveDeleteCopy">
    <mkdir dir="${destructiveBackupFolder}"/>
    <sf:retrieve username="${sf.usernameTarget}"
                 password="${sf.passwordTarget}"
                 serverurl="${sf.serverURLTarget}"
                 retrieveTarget="${destructiveBackupFolder}"
                 unpackaged="${story}/destructiveChanges.xml"/>

    <copy todir="${destructiveSrcFolder}">
      <fileset dir="${story}" includes="package-destroy.xml" />
      <fileset dir="${story}" includes="destructiveChanges.xml" />
    </copy>

    <move file="${destructiveSrcFolder}/package-destroy.xml" tofile="${destructiveSrcFolder}/package.xml" />
  </target>

  <target name="deleteComponents">
    <antcall target="retrieveDeleteCopy" />

    <sf:deploy username="${sf.usernameTarget}"
               password="${sf.passwordTarget}"
               serverurl="${sf.serverURLTarget}"
               maxPoll="${sf.maxPoll}"
               deployRoot="${destructiveSrcFolder}"
               checkonly="${sf.checkOnly}"
               rollbackOnError="true"
               testlevel="${sf.testLevel}"
               ignorewarnings="true" />
  </target>

  <target name="deleteComponentsWithSelectedTests">
    <antcall target="retrieveDeleteCopy" />

    <sf:deploy username="${sf.usernameTarget}"
               password="${sf.passwordTarget}"
               serverurl="${sf.serverURLTarget}"
               maxPoll="${sf.maxPoll}"
               deployRoot="${destructiveSrcFolder}"
               checkonly="${sf.checkOnly}"
               rollbackOnError="true"
               testlevel="RunSpecifiedTests"
               ignorewarnings="true" >
      <runTest>DataFactoryTests</runTest>
    </sf:deploy>
  </target>

  <target name="syncRepository">
    <antcall target="retrieveSource" />

    <antcall target="copyToRepository">
      <param name="folder" value="${sourceFolder}" />
    </antcall>
  </target>

  <target name="empty">
  </target>

</project>